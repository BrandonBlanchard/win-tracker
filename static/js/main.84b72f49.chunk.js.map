{"version":3,"sources":["classes/fetch-data.js","components/welcome-mat/welcome-mat.js","actions/index.js","components/chart-widget/chart-card.jsx","components/pie-chart/pie-chart.jsx","components/mini-leaderboard/mini-leaderboard.jsx","components/section-meta/section-meta.jsx","components/tab-container/tab-container.js","components/games-list/games-list.jsx","components/player-thumb/player-thumb.js","components/players-list/players-list.jsx","App.js","serviceWorker.js","reducers/data-load.js","reducers/index.js","index.js"],"names":["formatData","data","dataReadyCB","lines","split","colNames","shift","map","ln","reduce","acc","val","index","toLowerCase","WelcomeMat","react_default","a","createElement","className","ACTION_TYPE","Object","freeze","DATA_LOAD","chart_widget_chart_card","props","chartName","children","PieChart","style","width","height","react_plotly_default","assign","configuration","displayModBar","layout","objectSpread","paper_bgcolor","plot_bgcolor","grid","rows","columns","showlegend","byWins","b","aWins","wins","bWins","onWins","player","numberStringMap","2","3","4","5","6","MiniLeaderboard","_extractPlayers","players","sortedPlayers","filter","sort","leader","rabble","slice","length","extractPlayers","leaderStats","label","stat","games","toFixed","faction","set","_ref","i","font","color","family","section_meta_section_meta","_props$data","factions","_useState","useState","_useState2","slicedToArray","factionChart","setFactionChart","_useState3","_useState4","playerChart","setPlayerChart","useEffect","factionEntries","trimmedFactions","item","type","labels","entry","values","domain","column","hole","textinfo","computeFactionChart","playerEntries","trimmerPlayers","computePlayerChart","key","pie_chart_pie_chart","mini_leaderboard_MiniLeaderboard","TabContainer","tabIndex","setTabIndex","tabNames","name","thisIndex","onClick","tabMapper","tabContent","tabContentRenderer","playerRenderer","caster","controlPoints","theme","win","gameRenderer","game","player1","winCondition","player2","GamesList","console","log","defaultProps","PlayerThumb","_props$player","PlayersList","player_thumb_PlayerThumb","LOAD_STATE","INIT","LOADING","READY","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","readiness","url","_this2","rawData","dispatch","payload","dataLoad","fetch","then","text","catch","e","error","setState","_this$props$data","tab_container_TabContainer","games_list_GamesList","players_list_PlayersList","welcome_mat_WelcomeMat","renderOnReady","Component","applicationEntry","connect","Boolean","window","location","hostname","match","playerReducer","playerDidWin","has","parseInt","opponent","factionReducer","factionDidWin","gamesMapper","dataLoadReducer","prevState","action","reverse","toConsumableArray","initialState","rootReducer","arguments","undefined","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84b72f49.chunk.js","sourcesContent":["import { stringify } from \"querystring\";\r\n\r\n\r\nconst fetchData = (url, dataReadyCB) => {\r\n     return fetch(url).then(data => {\r\n        data.text().then(data => formatData(data, dataReadyCB));\r\n     }).catch(e => console.error('data fetch failed')) };\r\n\r\nconst formatData = (data, dataReadyCB) => {\r\n   const lines = data.split('\\n');\r\n\r\n   // Take first row and split it into colmnNames\r\n   const colNames = lines.shift().split(',');\r\n   // Map line values to column names \r\n   dataReadyCB(lines.map(ln => \r\n      ln.split(',').reduce((acc, val, index) => {\r\n         acc[colNames[index].toLowerCase()] = val;\r\n         return acc;\r\n      }, {})\r\n   ));\r\n\r\n}\r\n\r\n\r\nexport { fetchData }","import React from 'react';\r\nimport './index.css';\r\n\r\nexport const WelcomeMat = () => {\r\n\r\n    return (\r\n        <div className=\"welcome-mat\">\r\n            <h1 className=\"welcome-mat__header-1\">Turn  <br/> Two </h1>\r\n            <h1 className=\"welcome-mat__header-2\">Smoke <br/> Break</h1>\r\n        </div>\r\n    );\r\n}\r\n","// Action Types\r\nconst ACTION_TYPE = Object.freeze({\r\n    DATA_LOAD: 'DATA_LOAD'\r\n});\r\n\r\n// Actions\r\nconst dataLoad = (rawData) => {\r\n    return { type: ACTION_TYPE.DATA_LOAD, payload: rawData }\r\n}\r\n\r\nexport {ACTION_TYPE, dataLoad}","import React from 'react';\r\nimport './chart-card.css';\r\n\r\nexport default function (props) {\r\n    return (\r\n        <div className=\"chart-card\">\r\n            <div className=\"chart-card__content\">\r\n                <h3 className=\"chart-card__name\">{props.chartName}</h3>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport './pie-chart.css';\r\n\r\nconst PieChart = (props) => (\r\n    <div className=\"pie-chart\" style={{width: props.width, height: props.height }}>\r\n        <Plot {...props} \r\n        configuration={{displayModBar: false }}\r\n        layout={{ ...props.layout, paper_bgcolor: 'rgba(0,0,0,0)', plot_bgcolor: 'rgba(0,0,0,0)', width: props.width, height: props.height, grid: { rows: 0, columns: 0}, showlegend: false }}></Plot>\r\n    </div>\r\n);\r\n\r\nexport default PieChart;","import React, { useState, useEffect } from 'react';\r\nimport './mini-leaderboard.css';\r\n\r\n\r\nconst byWins = (a, b) => {\r\n    const aWins = a.wins;\r\n    const bWins = b.wins;\r\n\r\n    if(aWins > bWins) return -1;\r\n    if(aWins < bWins) return 1;\r\n    return 0;\r\n};\r\n\r\n\r\nconst onWins = (player) => player.wins > 2 && player.player != 'Some rando'; \r\n\r\n\r\nconst extractPlayers = (players) => {\r\n    const sortedPlayers = players.filter(onWins)\r\n                                 .sort(byWins);\r\n\r\n    const leader = sortedPlayers[0];\r\n    const rabble = sortedPlayers.slice(1, sortedPlayers.length);\r\n    \r\n    return {leader, rabble};\r\n};\r\n\r\nconst numberStringMap = {\r\n    2: '2nd',\r\n    3: '3rd',\r\n    4: '4th',\r\n    5: '5th',\r\n    6: '6th'\r\n}\r\n\r\nexport const MiniLeaderboard = (props) => {\r\n    const {leader, rabble} = extractPlayers(props.players); \r\n    const leaderStats = [\r\n        { label: 'Wins', stat: leader.wins },\r\n        { label: 'W/L Ratio', stat: (leader.wins/leader.games).toFixed(2)},\r\n        { label: 'Games', stat: leader.games}\r\n    ];\r\n\r\n    return (\r\n        <ul className='mini-leaderboard'>\r\n            <li className='mini-leaderboard__leader'>\r\n                <i className='fa fa-crown mini-leaderboard__leader-crown'></i>\r\n                <p className='mini-leaderboard__leader-name'>{ leader.player }</p>\r\n                <p className='mini-leaderboard__leader-faction'>{ leader.faction }</p>\r\n                <div className='mini-leaderboard__leader-stats'>\r\n                    {\r\n                        leaderStats.map(set => (\r\n                            <div className='mini-leaderboard__leader-stat'>\r\n                                <p className='leader-stat__label'>{set.label}</p>\r\n                                <p className='leader-stat__value'>{set.stat}</p>\r\n                            </div>\r\n                        ))\r\n      \r\n                    }\r\n                    \r\n                  \r\n                </div>\r\n            </li>\r\n            {\r\n                rabble.map( ({ player, faction, wins, games}, i) => (\r\n                    <li className='mini-leaderboard__player'>\r\n                        <div className='mini-leaderboard__player-dot'> { player } </div>\r\n                        <div className='mini-leaderboard__player-faction'>{ faction }</div>\r\n                        <div className=\"mini-leaderboard__player-wins\">{numberStringMap[i + 2]}</div>\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    )   ;\r\n};\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ChartCard } from '../chart-widget';\r\nimport { PieChart } from './../pie-chart';\r\nimport { MiniLeaderboard } from './../mini-leaderboard';\r\nimport './index.css';\r\n\r\nconst layout = {\r\n  font: {\r\n    color: '#728041',\r\n    family: 'sans serif'\r\n  }\r\n};\r\n\r\n// Faction Games\r\nconst computeFactionChart = (factionEntries, setFactionChart) => {\r\n    const trimmedFactions = factionEntries.filter( item => (item.wins > 2));\r\n\r\n    const factionNames = trimmedFactions.map(entry => entry.faction);\r\n    const factionWins = trimmedFactions.map(entry => entry.games);\r\n\r\n    setFactionChart([{\r\n      type: 'pie',\r\n      labels: factionNames,\r\n      values: factionWins,\r\n      domain: { column: 0 },\r\n      hole: .96,   \r\n      textinfo: 'label+value',\r\n    }]);\r\n};\r\n\r\n// Player wins\r\nconst computePlayerChart = (playerEntries, setPlayerChart) => {\r\n  // Filter out players with only 1 or 2 games and any randos\r\n  const trimmerPlayers = playerEntries.filter( player => (player.games > 2) && player.player !== 'Some rando');\r\n\r\n  const playerNames = trimmerPlayers.map(player => player.player);\r\n  const playerWins = trimmerPlayers.map(player => player.wins);\r\n\r\n  setPlayerChart([{\r\n    type: 'pie',\r\n    labels: playerNames,\r\n    values: playerWins,\r\n    domain: {column: 1},\r\n    hole: 0.96,\r\n    textinfo: 'label+value'\r\n  }])\r\n}\r\n\r\nexport default (props) => {\r\n  const { factions, players } = props.data;\r\n\r\n  const [factionChart, setFactionChart] = useState([]);\r\n  const [playerChart, setPlayerChart] = useState([]);\r\n  const chartSize = 330;\r\n\r\n  useEffect(() => computeFactionChart(factions, setFactionChart), [factions]);\r\n  useEffect(() => computePlayerChart(players, setPlayerChart), [players]);\r\n\r\n  return (\r\n    <div className='meta-stats'>\r\n      <ChartCard chartName=\"Faction Games\" key={0}>\r\n        <PieChart data={factionChart} layout={layout} width={chartSize} height={chartSize} ></PieChart>\r\n      </ChartCard>\r\n\r\n      <MiniLeaderboard players={players}></MiniLeaderboard>\r\n\r\n      <ChartCard chartName=\"Player Wins\" key={0}>\r\n        <PieChart data={playerChart} layout={layout} width={chartSize} height={chartSize} ></PieChart>\r\n      </ChartCard>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './tab-container.css';\r\n\r\nconst tabMapper = (name, thisIndex, tabIndex, setTabIndex) => (\r\n    <div className={ thisIndex === tabIndex ? 'tab-container__tab--active' : 'tab-container__tab' } \r\n         onClick={ () => setTabIndex(thisIndex)}>\r\n    { name }</div>\r\n);\r\n\r\nconst tabContentRenderer = (tabIndex, tabContent) => tabContent[tabIndex];\r\n\r\nconst TabContainer = (props) => {\r\n    // Takes in children\r\n    const [ tabIndex, setTabIndex] = useState(0);\r\n    const { children, tabNames } = props;\r\n\r\n    return (\r\n        <div className='tab-container'>\r\n            <div className='tab-container__tab-bar'>\r\n                { tabNames.map((name, thisIndex) => tabMapper(name, thisIndex, tabIndex, setTabIndex)) }\r\n            </div>    \r\n\r\n            <div className='tab-container__tab-content'>\r\n                { tabContentRenderer(tabIndex, children) }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTabContainer.propTypes = {\r\n    tabNames: PropTypes.arrayOf(PropTypes.string)\r\n}\r\n\r\nexport { TabContainer };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './games-list.css';\r\nimport { spawn } from 'child_process';\r\n\r\nconst playerRenderer = ({ caster, controlPoints, faction, name, theme, win }) => (\r\n    <tr className='games-list__player'>\r\n            <td className='games-list__stat games-list__player-name'>\r\n                <div className='games-list__win-loss'>\r\n                    <i className={ win ? 'fa fa-trophy' : 'fa fa-skull-crossbones'}></i>\r\n                </div>\r\n                {name}\r\n            </td>\r\n            <td  className='games-list__stat'> { faction } </td>\r\n            <td  className='games-list__stat'> { caster } </td>\r\n            <td  className='games-list__stat'> { theme } </td>\r\n            <td  className='games-list__stat--orange games-list__control-points'> { controlPoints || 0 } </td>\r\n    </tr>\r\n);\r\n\r\nconst gameRenderer = (game) => (\r\n    <tr className=\"games-list__game\">\r\n        <table className='games-list__game-data'>\r\n            {playerRenderer(game.player1, game.winCondition)}\r\n            <td className='games-list__win-condition'>{ game.winCondition } </td>\r\n            {playerRenderer(game.player2, game.winCondition)}\r\n        </table>\r\n    </tr>\r\n);\r\n\r\nconst GamesList = (props) => {\r\n    const { games } = props;\r\n\r\n    console.log(games);\r\n\r\n    return (\r\n        <div className='games-list'>\r\n            <h2 className='games-list__header'> Games </h2>\r\n            <table className=\"games-list__games-list\">\r\n                {games.map(gameRenderer)}\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nGamesList.propTypes = {\r\n    games: PropTypes.array\r\n};\r\n\r\nGamesList.defaultProps = {\r\n    games: []\r\n}\r\n\r\nexport { GamesList };","import React from 'react';\r\nimport './player-thumb.css';\r\n\r\n\r\nconst PlayerThumb = (props) => {\r\n    const { player, faction, games, wins, controlPoints} = props.player;\r\n    \r\n    return (\r\n        <div className='player-thumb'>\r\n            <div className='player-thumb__content'>\r\n                <div className='player-thumb__name'>{ player }</div>\r\n                <div className='player-thumb__faction'>{ faction }</div>\r\n                <hr/>\r\n                <ul className='player-thumb__stats'>\r\n                    <li>\r\n                        <span className='player-thumb__label'>Wins</span>\r\n                        <span className='player-thumb__value'>{ wins }</span>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <span className='player-thumb__label'>W/L Ratio</span>\r\n                        <span className='player-thumb__value'>{ (wins/games).toFixed(2) }</span>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <span className='player-thumb__label'>Games</span>\r\n                        <span className='player-thumb__value'>{ games }</span>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <span className='player-thumb__label'> lifetime control</span>\r\n                        <span className='player-thumb__value'>{controlPoints}</span>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <span className='player-thumb__label'> control per game</span>\r\n                        <span className='player-thumb__value'>{ (controlPoints/games).toFixed(2) }</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n} \r\n\r\n\r\nexport { PlayerThumb };","import React from 'react';\r\nimport './players-list.css';\r\n\r\nimport { PlayerThumb } from './../player-thumb';\r\n\r\nconst PlayersList = (props) => {\r\n    const { players } = props;\r\n    return (\r\n        <div className='players-list'>\r\n            <h2 className='players-list__header'>Players</h2>\r\n            <div className='players-list__players'>\r\n                { players.map((player) => (<PlayerThumb player={ player } />))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { PlayersList }","import React, { Component} from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nimport { fetchData } from './classes/fetch-data';\nimport 'react-pivottable/pivottable.css';\nimport { WelcomeMat } from './components/welcome-mat/welcome-mat';\nimport { dataLoad } from './actions/index';\nimport { SectionMeta } from './components/section-meta';\nimport { TabContainer } from './components/tab-container';\nimport { GamesList } from './components/games-list';\nimport { PlayersList } from './components/players-list';\n\nconst dataSource = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQ6B-jLNFVOaHlagYjsClKUDGquAkZpCymnDQ60n5wOw-0pf8gRImDXKciW7FzLZbK4rZutfQjPfVSM/pub?output=csv';\n\n\nconst LOAD_STATE = {\n  INIT: 0,\n  LOADING: 1,\n  READY: 2\n};\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      readiness: LOAD_STATE.INIT,\n    };\n  }\n\n\n  componentDidMount() {\n    if (this.state.readiness === LOAD_STATE.INIT) {\n\n      fetchData(dataSource, (rawData) => {\n        this.props.dispatch(dataLoad(rawData));\n\n      }).then(() => { \n        this.setState({ readiness: LOAD_STATE.READY });\n      });\n\n      this.setState({ readiness: LOAD_STATE.LOADING });\n    }\n  }\n\n\n  renderOnReady() {\n    const { games, players } = this.props.data;\n    const tabNames = ['Games', 'Players'];\n\n    return (\n      <div className='charts-container'>\n        <SectionMeta {...this.props} />\n        <TabContainer tabNames={tabNames}>\n            <GamesList games={games} />\n            <PlayersList players={players} />\n        </TabContainer>\n      </div>\n    );\n  }\n\n\n  render() {\n    console.log(this.props)\n    return (\n      <div className=\"app\">\n        <WelcomeMat/>\n        {this.props.data.players.length > 0 && this.renderOnReady()}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  data: PropTypes.objectOf(PropTypes.array)\n};\n\nApp.defaultProps = {\n  data: {\n    players: []\n  }\n}\n\nconst mapStateToProps = state => state;\n\n\nconst applicationEntry = connect(mapStateToProps)(App);\n\n\nexport default applicationEntry;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import has from 'lodash/has';\r\n\r\nconst OPPONENT_NAME = 'opponent';\r\nconst OPPONENT_CASTER = 'opponent caster';\r\nconst OPPONENT_FACTION = \"opponent faction\";\r\nconst OPPONENT_THEME = 'opponent theme';\r\nconst OPPONENT_CONTROL_POINTS = 'opponent control points';\r\nconst MY_CONTROL_POINTS = 'my control points';\r\nconst WIN_CONDITION = 'win condition';\r\n\r\nconst playerReducer = (acc, game) => {\r\n    const playerDidWin = game.win === \"TRUE\";\r\n    console.log(game[MY_CONTROL_POINTS], game[OPPONENT_CONTROL_POINTS])\r\n    // DRY ?\r\n    if(has(acc, game.player)) {\r\n        acc[game.player].games += 1;\r\n        acc[game.player].wins += playerDidWin ? 1 : 0;\r\n        acc[game.player].controlPoints += parseInt(game[MY_CONTROL_POINTS]) || 0;\r\n    } else {\r\n        acc[game.player] = {\r\n            games: 1,\r\n            wins: playerDidWin ? 1 : 0,\r\n            player: game.player,\r\n            faction: game.faction,\r\n            controlPoints: parseInt(game[MY_CONTROL_POINTS]) || 0\r\n        }\r\n    }\r\n\r\n    if(has(acc, game.opponent)) {\r\n        acc[game.opponent].games += 1;\r\n        acc[game.opponent].wins += !playerDidWin ? 1 : 0;\r\n        acc[game.opponent].controlPoints += parseInt(game[OPPONENT_CONTROL_POINTS]) || 0;\r\n    } else {\r\n        acc[game.opponent] = {\r\n            games: 1,\r\n            wins: !playerDidWin ? 1 : 0,\r\n            player: game.opponent,\r\n            faction: game[OPPONENT_FACTION],\r\n            controlPoints: parseInt(game[OPPONENT_CONTROL_POINTS]) || 0\r\n        }\r\n    }\r\n\r\n    return acc;\r\n}\r\n\r\nconst factionReducer = (acc, game) => {\r\n    const factionDidWin = game.win === \"TRUE\";\r\n\r\n    if(has(acc, game.faction)) {\r\n        acc[game.faction].wins += factionDidWin ? 1 : 0;\r\n        acc[game.faction].games += 1;\r\n    } else {\r\n        acc[game.faction] = {\r\n            faction: game.faction,\r\n            wins: factionDidWin ? 1 : 0,\r\n            games: 1\r\n        };\r\n    }\r\n\r\n    if(has(acc, game[OPPONENT_FACTION])) {\r\n        acc[game[OPPONENT_FACTION]].wins += !factionDidWin ? 1 : 0;\r\n        acc[game[OPPONENT_FACTION]].games += 1;\r\n    } else {\r\n        acc[game[OPPONENT_FACTION]] = {\r\n            faction: game[OPPONENT_FACTION],\r\n            wins: !factionDidWin ? 1 : 0,\r\n            games: 1\r\n        };\r\n    }\r\n\r\n    return acc;\r\n}\r\n\r\n\r\nconst gamesMapper = (game) => {\r\n    const player1 = {\r\n        name: game.player,\r\n        caster: game.caster,\r\n        faction: game.faction,\r\n        theme: game.theme,\r\n        controlPoints: game[MY_CONTROL_POINTS],\r\n        win: game.win === \"TRUE\",\r\n    };\r\n\r\n    const player2 = {\r\n        name: game[OPPONENT_NAME],\r\n        caster: game[OPPONENT_CASTER],\r\n        faction: game[OPPONENT_FACTION],\r\n        theme: game[OPPONENT_THEME],\r\n        controlPoints: game[OPPONENT_CONTROL_POINTS],\r\n        win: game.win === \"FALSE\"\r\n    };\r\n\r\n    return {\r\n        winCondition: game[WIN_CONDITION],\r\n        player1,\r\n        player2\r\n    };\r\n}\r\n\r\nconst dataLoadReducer = (prevState, action) => {\r\n    console.log('data load reducer', prevState, action);\r\n\r\n    // Csv is parsed from line 1 to n, this means that older games show first.\r\n    // Reversing the list corrects it to be newest first\r\n    const data = action.payload.reverse();\r\n\r\n    return {\r\n        players: [ ...Object.values(data.reduce(playerReducer, {})) ],\r\n        factions: [ ...Object.values(data.reduce(factionReducer, {})) ],\r\n        games: [ ...Object.values(data.map(gamesMapper)) ]\r\n    }\r\n};\r\n\r\n\r\nexport default dataLoadReducer;","import { ACTION_TYPE } from './../actions/index';\r\nimport dataLoadReducer from './data-load';\r\n\r\nconst initialState = {\r\n    data: {\r\n        // { player: 'brandon', wins: 20, games: 30, }\r\n        players:[],\r\n        // { faction: 'crucible guard', wins: 20, games: 30 }\r\n        factions: [],\r\n    }\r\n}\r\n\r\nconst rootReducer = (prevState = initialState, action) => {\r\n    console.log(action, ACTION_TYPE.DATA_LOAD)\r\n    return {\r\n        data: action.type === ACTION_TYPE.DATA_LOAD ? Object.assign({}, prevState.data, dataLoadReducer(prevState, action)) : Object.assign({}, prevState.data), \r\n    }\r\n};\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index';\n\n// Data source\n// https://docs.google.com/spreadsheets/d/e/2PACX-1vQ6B-jLNFVOaHlagYjsClKUDGquAkZpCymnDQ60n5wOw-0pf8gRImDXKciW7FzLZbK4rZutfQjPfVSM/pub?gid=0&single=true&output=csv\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}